#include <iostream>
#include <vector>
#include <string>
#include <unordered_set>  
std::vector<int> count_substrings(const std::string& S, int K) {
    std::vector<int> result;
    int n = S.length();

    for (int len = 2; len <= K; ++len) {
        int count = 0;
        for (int i = 0; i <= n - len; ++i) {
            std::unordered_set<char> seen;
            bool is_unique = true;
            for (int j = i; j < i + len; ++j) {
                if (seen.count(S[j])) {
                    is_unique = false;
                    break;
                }
                seen.insert(S[j]);
            }
            if (is_unique) ++count;
        }
        result.push_back(count);
    }

    return result;
}

int main() {
    std::string S;
    int K;
    std::cin >> S >> K;
    std::vector<int> result = count_substrings(S, K);
    for (int count : result) {
        std::cout << count << std::endl;
    }
    return 0;
}

//CPP
#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

// Function to check if a number is prime
bool isPrime(int num) {
    if (num <= 1) return false;
    if (num == 2 || num == 3) return true;
    if (num % 2 == 0) return false;
    for (int i = 3; i * i <= num; i += 2) {
        if (num % i == 0) return false;
    }
    return true;
}

// Zigzag traversal function
void zigzag_traversal(int M, int N, vector<vector<int>>& grid) {
    vector<int> result;

    for (int i = 0; i < M; i++) {
        if (i % 2 == 0) {
            // left → right
            for (int j = 0; j < N; j++) {
                if (!isPrime(grid[i][j])) {
                    result.push_back(grid[i][j]);
                }
            }
        } else {
            // right → left
            for (int j = N - 1; j >= 0; j--) {
                if (!isPrime(grid[i][j])) {
                    result.push_back(grid[i][j]);
                }
            }
        }
    }

    if (result.empty()) {
        cout << -1 << endl;
    } else {
        for (int i = 0; i < result.size(); i++) {
            cout << result[i];
            if (i != result.size() - 1) cout << " ";
        }
        cout << endl;
    }
}

int main() {
    int M, N;
    cin >> M >> N;
    vector<vector<int>> grid(M, vector<int>(N));

    for (int i = 0; i < M; i++) {
        for (int j = 0; j < N; j++) {
            cin >> grid[i][j];
        }
    }

    zigzag_traversal(M, N, grid);
    return 0;
}

#include <stdio.h>
#define MOD 1000000007

int memo[1000001];  // cache for memoization

// Recursive function with memoization
int ways(int n) {
    if (n == 0) return 1;     // 1 way (no spins)
    if (n < 0) return 0;      // invalid case
    
    if (memo[n] != -1) return memo[n];  // return cached value
    
    long long ans = 0;
    for (int i = 1; i <= 6; i++) {
        ans = (ans + ways(n - i)) % MOD;
    }
    memo[n] = (int)ans;
    return memo[n];
}

int main() {
    int n;
    scanf("%d", &n);
    
    // initialize memo table
    for (int i = 0; i <= n; i++) memo[i] = -1;
    
    printf("%d\n", ways(n));
    return 0;
}
                

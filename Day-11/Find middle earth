===========================
	CPP CODE 
===========================
#include <bits/stdc++.h>
using namespace std;

double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
    int m = nums1.size(), n = nums2.size();
    int total = m + n;
    int mid1 = (total - 1) / 2, mid2 = total / 2;

    int i = 0, j = 0, count = 0;
    int curr = 0, prev = 0;

    while (count <= mid2) {
        prev = curr;
        if (i < m && (j >= n || nums1[i] <= nums2[j])) {
            curr = nums1[i++];
        } else {
            curr = nums2[j++];
        }
        count++;
    }

    if (total % 2 == 1) {
        return curr;  // odd case
    } else {
        return (prev + curr) / 2.0; // even case
    }
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int m, n;
    cin >> m >> n;
    vector<int> nums1(m), nums2(n);
    for (int i = 0; i < m; i++) cin >> nums1[i];
    for (int j = 0; j < n; j++) cin >> nums2[j];

    cout << fixed << setprecision(1) << findMedianSortedArrays(nums1, nums2) << "\n";

    return 0;
}

===========================
	CPP CODE 
===========================
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

bool canKill(const vector<int>& groups, int m, int k) {
    long long time = 0;
    for (int g : groups) {
        time += (g + k - 1) / k;  // ceil(g/k)
        if (time > m) return false;
    }
    return time <= m;
}

void user_logic(int n, vector<int>& enemy_groups, int m) {
    int low = 1, high = *max_element(enemy_groups.begin(), enemy_groups.end());
    int ans = -1;

    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (canKill(enemy_groups, m, mid)) {
            ans = mid;
            high = mid - 1; // try smaller K
        } else {
            low = mid + 1;  // need bigger K
        }
    }

    if (ans == -1) {
        cout << 1 << "\n";  // not possible
        return;
    }

    // Print decimal and octal
    cout << ans << " " << oct << ans << "\n";
}

int main() {
    int n, m;
    cin >> n;
    vector<int> enemy_groups(n);
    for (int i = 0; i < n; ++i) {
        cin >> enemy_groups[i];
    }
    cin >> m;
    
    user_logic(n, enemy_groups, m);
    
    return 0;
}

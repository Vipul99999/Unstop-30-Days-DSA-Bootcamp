#include <iostream>
#include <string>
#include <algorithm>
using namespace std;

int minimum_operations(int N, const string& S) {
    int mismatch_ls = 0, mismatch_sl = 0;

    // Pattern 1: l s l s ...
    int l_needed = 0, s_needed = 0;
    for(int i = 0; i < N; i++) {
        char expected = (i % 2 == 0) ? 'l' : 's';
        if(S[i] != expected) {
            if(S[i] == 'l') l_needed++;
            else s_needed++;
        }
    }
    int ops1 = max(l_needed, s_needed);

    // Pattern 2: s l s l ...
    l_needed = 0; s_needed = 0;
    for(int i = 0; i < N; i++) {
        char expected = (i % 2 == 0) ? 's' : 'l';
        if(S[i] != expected) {
            if(S[i] == 'l') l_needed++;
            else s_needed++;
        }
    }
    int ops2 = max(l_needed, s_needed);

    return min(ops1, ops2);
}

int main() {
    int N;
    string S;
    cin >> N >> S;

    cout << minimum_operations(N, S) << endl;
    return 0;
}

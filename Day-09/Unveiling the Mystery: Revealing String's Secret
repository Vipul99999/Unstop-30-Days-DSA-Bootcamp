===========================
CPP CODE
===========================
#include <iostream>
#include <string>
#include <algorithm>
using namespace std;

// Function to check if T is subsequence of str
bool isSubsequence(const string& str, const string& T) {
    int i = 0, j = 0;
    while (i < str.size() && j < T.size()) {
        if (str[i] == T[j]) {
            j++;
        }
        i++;
    }
    return (j == T.size());
}

int find_smallest_day(string S, string T) {
    string current = S;  // Day 1 string

    for (int day = 1; day <= 1000; day++) { 
        // Check if T is subsequence
        if (isSubsequence(current, T)) {
            return day;
        }
        // Build next day's string
        reverse(current.begin(), current.end());
        current += S;
    }
    return -1; // if somehow never appears (should not happen given constraints)
}

int main() {
    string S, T;
    cin >> S >> T;
    int result = find_smallest_day(S, T);
    cout << result << endl;
    return 0;
}

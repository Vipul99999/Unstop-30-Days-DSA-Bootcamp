#include <stdio.h>
#include <string.h>

#define MOD 998244353
#define MAXN 5005

int N, M, K;
int U[MAXN], V[MAXN];
int blocked[MAXN][MAXN];  // adjacency for unusable edges (sparse is better, but M â‰¤ 5000, okay)
long long dp[MAXN], newdp[MAXN];

int main() {
    scanf("%d %d %d", &N, &M, &K);

    // store unusable roads
    for (int i = 0; i < M; i++) {
        int u, v;
        scanf("%d %d", &u, &v);
        blocked[u][v] = blocked[v][u] = 1;
    }

    dp[1] = 1;  // start at city 1

    for (int day = 0; day < K; day++) {
        long long total = 0;
        for (int i = 1; i <= N; i++) {
            total = (total + dp[i]) % MOD;
        }

        for (int v = 1; v <= N; v++) {
            long long val = total - dp[v];  // exclude self
            // exclude unusable neighbors
            for (int u = 1; u <= N; u++) {
                if (blocked[u][v]) {
                    val -= dp[u];
                }
            }
            val %= MOD;
            if (val < 0) val += MOD;
            newdp[v] = val;
        }

        // copy
        for (int i = 1; i <= N; i++) {
            dp[i] = newdp[i];
        }
    }

    printf("%lld\n", dp[1] % MOD);
    return 0;
}
                

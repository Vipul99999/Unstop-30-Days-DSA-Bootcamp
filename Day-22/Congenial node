#include <stdio.h>

void find_center_node(int edges[][2], int n) {
    int degree[n + 1];   // degrees of nodes (1-based indexing)
    for (int i = 1; i <= n; i++) {
        degree[i] = 0;
    }

    // Count degrees
    for (int i = 0; i < n - 1; i++) {
        int u = edges[i][0];
        int v = edges[i][1];
        degree[u]++;
        degree[v]++;
    }

    // Find congenial node
    for (int i = 1; i <= n; i++) {
        if (degree[i] == n - 1) {
            printf("%d\n", i);
            return;
        }
    }

    // If no congenial node exists (though problem guarantees one in a valid tree)
    printf("-1\n");
}

int main() {
    int n;
    scanf("%d", &n);
    int edges[n-1][2];
    for (int i = 0; i < n-1; i++) {
        scanf("%d %d", &edges[i][0], &edges[i][1]);
    }
    find_center_node(edges, n);
    return 0;
}
                        

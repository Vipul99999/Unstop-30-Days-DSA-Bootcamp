===========================
	CPP CODE 
===========================

#include <iostream>
#include <vector>
#include <algorithm>  
using namespace std;

vector<int> user_logic(int n, int q, vector<int> scores, vector<int> queries) {
    // Step 1: Sort scores
    sort(scores.begin(), scores.end());

    vector<int> results;
    results.reserve(q);

    // Step 2: Answer each query using binary search
    for (int x : queries) {
        // Find the first position where value >= x
        auto it = lower_bound(scores.begin(), scores.end(), x);
        int idx = it - scores.begin(); // index of first element >= x
        int count = n - idx;           // number of elements >= x
        results.push_back(count);
    }
    return results;
}

int main() {
    int n, q;
    cin >> n >> q;
    vector<int> scores(n);
    for (int i = 0; i < n; ++i) {
        cin >> scores[i];
    }
    vector<int> queries(q);
    for (int i = 0; i < q; ++i) {
        cin >> queries[i];
    }
    vector<int> results = user_logic(n, q, scores, queries);
    for (int result : results) {
        cout << result << "\n";
    }
    return 0;
}
